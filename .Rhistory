attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 0, add)
plt(s, 1, TRUE)
plt(s, 2, TRUE, FALSE)
}
pl(s, 0, 0, TRUE, randomize = TRUE)
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 5, add)
plt(s, 6, TRUE)
plt(s, 7, TRUE, FALSE)
}
pl(s, 0, 0, TRUE, randomize = TRUE)
pl(s, 0, 0, TRUE, randomize = TRUE)
de = de*10 + c(-5, 8)
plot(de, add = TRUE, border = grey(.5))
text(-7, -2.5, "1", srt = 0, col = 'black')
de = st_geometry(st_normalize(st_as_sf(DE)))
de = de*10 + c(-5, 8)
plot(de, add = TRUE, border = grey(.5))
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
de = st_geometry(st_normalize(st_as_sf(DE)))
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 0, add)
plt(s, 1, TRUE)
plt(s, 2, TRUE)
}
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
pl(s, 0, 0, TRUE, randomize = TRUE)
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 6, add)
plt(s, 7, TRUE)
plt(s, 8, TRUE, FALSE)
}
pl(s, 0, 0, TRUE, randomize = TRUE)
de = de*10 + c(-5, 8)
plot(de, add = TRUE, border = grey(.5))
text(-7, -2.5, "1958", srt = 0, col = 'black')
text(-7, -1.5, "1959", srt = 0, col = 'black')
text(-7, -0.5, "1960", srt = 0, col = 'black')
text(-7, 0, ".", srt = 0, col = 'black')
text(-7, 0.5, ".", srt = 0, col = 'black')
text(-7, 1.0, ".", srt = 0, col = 'black')
text(-7, 1.7, "2020", srt = 0, col = 'black')
text(-7, 2.5, "2020", srt = 0, col = 'black')
text(-7, 2.8, "2020", srt = 0, col = 'black')
text(-7, 2.9, "2020", srt = 0, col = 'black')
text(-7, 3.1, "2020", srt = 0, col = 'black')
text(-7, 3.2, "2020", srt = 0, col = 'black')
text(-7, 3.5, "2020", srt = 0, col = 'black')
text(-7, 3.5, "2020", srt = 0, col = 'black')
text(-7, 3.6, "2021", srt = 0, col = 'black')
text(-7, 3.7, "2022", srt = 0, col = 'black')
text(-7, 3.7, "2021", srt = 0, col = 'black')
text(-7, 4.4, "2022", srt = 0, col = 'black')
text(-7, 5.0, "2022", srt = 0, col = 'black')
text(-7, 5.4, "2022", srt = 0, col = 'black')
text(-7, 5.5, "2022", srt = 0, col = 'black')
text(-7, 5.6, "2022", srt = 0, col = 'black')
text(-7, 5.8, "2022", srt = 0, col = 'black')
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 0, add)
plt(s, 1, TRUE)
plt(s, 2, TRUE, FALSE)
}
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
de = st_geometry(st_normalize(st_as_sf(DE)))
pl(s, 0, 0, TRUE, randomize = TRUE)
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 4, add)
plt(s, 5, TRUE)
plt(s, 6, TRUE, FALSE)
}
pl(s, 0, 0, TRUE, randomize = TRUE)
de = de*10 + c(-5, 8)
plot(de, add = TRUE, border = grey(.5))
text(-7, -2.5, "1958", srt = 0, col = 'black')
text(-7, -1.5, "1959", srt = 0, col = 'black')
text(-7, -0.5, "1960", srt = 0, col = 'black')
text(-7, 0, ".", srt = 0, col = 'black')
text(-7, 1.0, ".", srt = 0, col = 'black')
text(-7, 2.0, ".", srt = 0, col = 'black')
text(-7, 4.0, "2020", srt = 0, col = 'black')
text(-7, 5.0, "2021", srt = 0, col = 'black')
text(-7, 6.0, "2022", srt = 0, col = 'black')
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 0, add)
plt(s, 1, TRUE)
plt(s, 2, TRUE, FALSE)
}
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
de = st_geometry(st_normalize(st_as_sf(DE)))
pl(s, 0, 0, TRUE, randomize = TRUE)
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 4, add)
plt(s, 5, TRUE)
plt(s, 6, TRUE, FALSE)
}
pl(s, 0, 0, TRUE, randomize = TRUE)
de = de*10 + c(-5, 8)
de = st_geometry(st_normalize(st_as_sf(DE)))
de = de*10 + c(-5, 8)
plot(de, add = TRUE, border = grey(.5))
plot(de, add = TRUE, border = grey(.5))
text(-7, -2.5, "1958", srt = 0, col = 'black')
text(-7, -1.5, "1959", srt = 0, col = 'black')
text(-7, -0.5, "1960", srt = 0, col = 'black')
text(-7, 0, ".", srt = 0, col = 'black')
text(-7, 1.0, ".", srt = 0, col = 'black')
text(-7, 1.5, ".", srt = 0, col = 'black')
text(-7, 3.0, "2020", srt = 0, col = 'black')
text(-7, 0.5, ".", srt = 0, col = 'black')
text(-7, 1.0, ".", srt = 0, col = 'black')
text(-7, 3.0, "2020", srt = 0, col = 'black')
text(-7, 2.0, "2020", srt = 0, col = 'black')
text(-7, 1.5, "2020", srt = 0, col = 'black')
text(-7, 2.5, "2021", srt = 0, col = 'black')
text(-7, 3.0, "2022", srt = 0, col = 'black')
text(-7, 3.5, "2022", srt = 0, col = 'black')
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 4, add)
plt(s, 5, TRUE)
plt(s, 6, TRUE, FALSE)
}
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 0, add)
plt(s, 1, TRUE)
plt(s, 2, TRUE, FALSE)
}
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
de = st_geometry(st_normalize(st_as_sf(DE)))
pl(s, 0, 0, TRUE, randomize = TRUE)
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 4, add)
plt(s, 5, TRUE)
plt(s, 6, TRUE, FALSE)
}
de = st_geometry(st_normalize(st_as_sf(DE)))
pl(s, 0, 0, TRUE, randomize = TRUE)
de = de*10 + c(-5, 8)
plot(de, add = TRUE, border = grey(.5))
text(-7, -2.5, "1958", srt = 0, col = 'black')
text(-7, -1.5, "1959", srt = 0, col = 'black')
text(-7, -0.5, "1960", srt = 0, col = 'black')
text(-7, 0.1, ".", srt = 0, col = 'black')
text(-7, 0.5, ".", srt = 0, col = 'black')
text(-7, 1.0, ".", srt = 0, col = 'black')
text(-7, 1.5, "2020", srt = 0, col = 'black')
text(-7, 2.5, "2021", srt = 0, col = 'black')
text(-7, 3.5, "2022", srt = 0, col = 'black')
# location points:
p = st_coordinates(s[,1])
p[,1] = p[,1]-1.4
p[,2] = p[,2] + 8.2
points(p, col = grey(.7), pch = 16)
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
de = st_geometry(st_normalize(st_as_sf(DE)))
pl(s, 0, 0, TRUE, randomize = TRUE)
de = de*10 + c(-5, 8)
plot(de, add = TRUE, border = grey(.5))
text(-7, -2.5, "1958", srt = 0, col = 'black')
text(-7, -1.5, "1959", srt = 0, col = 'black')
text(-7, -0.5, "1960", srt = 0, col = 'black')
text(-7, 0.1, ".", srt = 0, col = 'black')
text(-7, 0.5, ".", srt = 0, col = 'black')
text(-7, 1.0, ".", srt = 0, col = 'black')
text(-7, 1.7, "2020", srt = 0, col = 'black')
text(-7, 2.7, "2021", srt = 0, col = 'black')
text(-7, 3.7, "2022", srt = 0, col = 'black')
# location points:
p = st_coordinates(s[,1])
p[,1] = p[,1]-1.4
p[,2] = p[,2] + 8.2
points(p, col = grey(.7), pch = 16)
# location points:
p = st_coordinates(s[,1])
p[,1] = p[,1]-1.0
p[,2] = p[,2] + 7.2
points(p, col = grey(.7), pch = 16)
# location points:
p = st_coordinates(s[,1])
p[,1] = p[,1]-0.5
p[,2] = p[,2] + 6.2
points(p, col = grey(.7), pch = 16)
# location points:
p = st_coordinates(s[,1])
p[,1] = p[,1]-0.5
p[,2] = p[,2] + 7.0
points(p, col = grey(.7), pch = 16)
# location points:
p = st_coordinates(s[,1])
p[,1] = p[,1]-0.4
p[,2] = p[,2] + 6.8
points(p, col = grey(.7), pch = 16)
p[,1] = p[,1]-0.4
p[,2] = p[,2] + 6.5
points(p, col = grey(.7), pch = 16)
# location points:
p = st_coordinates(s[,1])
p[,1] = p[,1]-0.4
p[,2] = p[,2] + 6.9
points(p, col = grey(.7), pch = 16)
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
pl(s, 0, 0, TRUE, randomize = TRUE)
de = de*10 + c(-5, 8)
plot(de, add = TRUE, border = grey(.5))
text(-7, -2.5, "1958", srt = 0, col = 'black')
text(-7, -1.5, "1959", srt = 0, col = 'black')
text(-7, -0.5, "1960", srt = 0, col = 'black')
text(-7, 0.1, ".", srt = 0, col = 'black')
text(-7, 0.5, ".", srt = 0, col = 'black')
text(-7, 1.0, ".", srt = 0, col = 'black')
text(-7, 1.7, "2020", srt = 0, col = 'black')
text(-7, 2.7, "2021", srt = 0, col = 'black')
text(-7, 3.7, "2022", srt = 0, col = 'black')
# location points:
p = st_coordinates(s[,1])
p[,1] = p[,1]-0.4
p[,2] = p[,2] + 6.9
points(p, col = grey(.7), pch = 16)
# centroids:
set.seed(131)
cent = st_coordinates(st_sample(de, 8))
points(cent, col = grey(.7), pch = 16)
cent = cent[rev(order(cent[,1])),]
seg = cbind(p, cent[1:8,])
segments(seg[,1], seg[,2], seg[,3], seg[,4], col = 'grey')
de = st_geometry(st_normalize(st_as_sf(DE)))
pl(s, 0, 0, TRUE, randomize = TRUE)
de = de*10 + c(-5, 8)
plot(de, add = TRUE, border = grey(.5))
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 4, add)
plt(s, 5, TRUE)
plt(s, 6, TRUE, FALSE)
}
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
de = st_geometry(st_normalize(st_as_sf(DE)))
de = de*10 + c(-5, 8)
plot(de, add = TRUE, border = grey(.5))
text(-7, -2.5, "1958", srt = 0, col = 'black')
text(-7, -1.5, "1959", srt = 0, col = 'black')
text(-7, -0.5, "1960", srt = 0, col = 'black')
text(-7, 0.1, ".", srt = 0, col = 'black')
text(-7, 0.5, ".", srt = 0, col = 'black')
text(-7, 1.0, ".", srt = 0, col = 'black')
text(-7, 1.7, "2020", srt = 0, col = 'black')
text(-7, 2.7, "2021", srt = 0, col = 'black')
text(-7, 3.7, "2022", srt = 0, col = 'black')
# location points:
p = st_coordinates(s[,1])
p[,1] = p[,1]-0.4
p[,2] = p[,2] + 6.9
points(p, col = grey(.7), pch = 16)
# centroids:
set.seed(131)
cent = st_coordinates(st_sample(de, 8))
points(cent, col = grey(.7), pch = 16)
cent = cent[rev(order(cent[,1])),]
seg = cbind(p, cent[1:8,])
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 4, add)
plt(s, 5, TRUE)
plt(s, 6, TRUE, FALSE)
}
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
de = st_geometry(st_normalize(st_as_sf(DE)))
pl(s,0,0)
pl(s,0,0,add = T)
pl(s,0,0,add = F,randomize = T)
pl(s,0,0,add = F,randomize = T)
de = de*10 + c(-5, 8)
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 0, add)
plt(s, 1, TRUE)
plt(s, 2, TRUE, FALSE)
}
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
de = st_geometry(st_normalize(st_as_sf(DE)))
pl(s,0,0,add = F,randomize = T)
pl(s,0,0,add = F)
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 0, add)
plt(s, 1, TRUE)
plt(s, 2, TRUE, FALSE)
}
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
data("Peru")
de = st_geometry(st_normalize(st_as_sf(DE)))
pl(s, 0, 0, TRUE, randomize = TRUE)
de = de*10 + c(-5, 8)
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 4, add)
plt(s, 5, TRUE)
plt(s, 6, TRUE, FALSE)
}
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
de = st_geometry(st_normalize(st_as_sf(DE)))
pl(s, 0, 0, TRUE, randomize = TRUE)
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 0, add)
plt(s, 1, TRUE)
plt(s, 2, TRUE, FALSE)
}
# point vector data cube:
plot.new()
de = st_geometry(st_normalize(st_as_sf(DE)))
pl(s, 0, 0, TRUE, randomize = TRUE)
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 0, add)
plt(s, 1, TRUE)
plt(s, 2, TRUE, FALSE)
}
# point vector data cube:
plot.new()
par(mar = c(5, 0, 5, 0))
plot.window(xlim = c(-10, 16), ylim = c(-2,12), asp = 1)
pl(s, 0, 0, TRUE, randomize = TRUE)
pl = function(s, x, y, add = TRUE, randomize = FALSE) {
attr(s, "dimensions")[[1]]$offset = x
attr(s, "dimensions")[[2]]$offset = y
m = r[[1]][y + 1:nrow,x + 1:ncol,1]
if (randomize)
m = m[sample(y + 1:nrow),x + 1:ncol]
dim(m) = c(x = nrow, y = ncol) # named dim
s[[1]] = m
plt(s, 4, add)
plt(s, 5, TRUE)
plt(s, 6, TRUE, FALSE)
}
pl(s, 0, 0, TRUE, randomize = TRUE)
de = de*10 + c(-5, 8)
plot(de, add = TRUE, border = grey(.5))
text(-7, -2.5, "1958", srt = 0, col = 'black')
text(-7, -1.5, "1959", srt = 0, col = 'black')
text(-7, -0.5, "1960", srt = 0, col = 'black')
text(-7, 0.1, ".", srt = 0, col = 'black')
text(-7, 0.5, ".", srt = 0, col = 'black')
text(-7, 1.0, ".", srt = 0, col = 'black')
text(-7, 1.7, "2020", srt = 0, col = 'black')
text(-7, 2.7, "2021", srt = 0, col = 'black')
text(-7, 3.7, "2022", srt = 0, col = 'black')
# location points:
p = st_coordinates(s[,1])
p[,1] = p[,1]-0.4
p[,2] = p[,2] + 6.9
points(p, col = grey(.7), pch = 16)
# centroids:
set.seed(131)
cent = st_coordinates(st_sample(de, 8))
points(cent, col = grey(.7), pch = 16)
cent = cent[rev(order(cent[,1])),]
seg = cbind(p, cent[1:8,])
segments(seg[,1], seg[,2], seg[,3], seg[,4], col = 'grey')
