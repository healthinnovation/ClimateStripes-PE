data_hex$mako
a = data_hex$mako
test <- data_hex$mako
image(matrix(1:100),col = test)
# test <- data_hex$mako
# image(matrix(1:100),col = test)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "ee-newcolors.json")
setwd("~/Documentos/GitHub/ClimateStripes4PE")
library(tidyverse)
library(cptcity)
library(plotly)
library(lubridate)
temp <- read_rds("data/temp")
tidydata <- temp %>%
pivot_longer(cols = `tmmx1958-01`:`tmmx2020-11`) %>%
mutate(
dep = case_when(
dep == "CALLAO" ~ "LIMA",
dep != "CALLAO" ~ dep
)
) %>%
mutate(fecha = substr(name, 5, 8)) %>%
mutate(
year = as.integer(substr(fecha, 1, 4)),
temp = as.double(value)
) %>%
select(dep, year, temp) %>%
mutate(dep = factor(dep)) %>%
group_by(dep, year) %>%
summarise(temp = mean(temp))
temp_ref <- tidydata %>%
filter(year == 1980) %>%
select(temp)
setwd("~/Documentos/GitHub/ClimateStripes4PE/docs")
library(tidyverse)
library(cptcity)
library(plotly)
library(lubridate)
temp <- read_rds("data/temp")
tidydata <- temp %>%
pivot_longer(cols = `tmmx1958-01`:`tmmx2020-11`) %>%
mutate(
dep = case_when(
dep == "CALLAO" ~ "LIMA",
dep != "CALLAO" ~ dep
)
) %>%
mutate(fecha = substr(name, 5, 8)) %>%
mutate(
year = as.integer(substr(fecha, 1, 4)),
temp = as.double(value)
) %>%
select(dep, year, temp) %>%
mutate(dep = factor(dep)) %>%
group_by(dep, year) %>%
summarise(temp = mean(temp))
tidydata
tidydata %>%
filter(year == 1980 & year == 1960) %>%
select(temp)
tidydata %>%
filter(year == 1980 && year == 1960) %>%
select(temp)
tidydata
tidydata %>%
filter(year %in% c(1980,1960)) %>%
select(temp)
tidydata %>%
filter(year %in% c(1980,1960)) %>%
select(temp) %>%
group_by(dep) %>%
mutate(temp = mean(temp))
temp_ref <- tidydata %>%
filter(year %in% c(1980,1960)) %>%
select(temp) %>%
group_by(dep) %>%
mutate(temp = mean(temp))
names <- tidydata %>% select(dep) %>% unique()
tidydata %>% filter(dep == "AMAZONAS")
temp_ref %>% filter(dep == "AMAZONAS") %>%
select(temp)
temp_ref
temp_ref %>% filter(dep == "AMAZONAS")
temp_ref %>% filter(dep == "AMAZONAS") %>%
select(temp) %>% pull()
?pull
temp_ref
temp_ref %>% filter(dep == "AMAZONAS")
temp_ref
temp_ref <- tidydata %>%
filter(year %in% c(1980,1960)) %>%
select(temp) %>%
group_by(dep) %>%
summarise(temp = mean(temp))
temp_ref
names <- tidydata %>% select(dep) %>% unique()
temp_ref %>% filter(dep == "AMAZONAS") %>%
select(temp) %>% pull()
temp_ref %>% filter(dep == "AMAZONAS") %>%
select(temp)
ref <- temp_ref %>% filter(dep == "AMAZONAS") %>%
select(temp) %>% pull()
data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
)
library(tidyverse)
library(cptcity)
library(plotly)
library(lubridate)
data
data
data <- tidydata %>% filter(dep == "AMAZONAS") %>%
mutate(temp = temp)
data
data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile()
max(data[["temp"]])
min(data[["temp"]])
data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent",
values = c(min(data[["temp"]]) , ref, max(data[["temp"]]))
)
data
data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile()
data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_color_gradient2(
low = "red",
midpoint = ref,
mid = "blue",
high = "green"
)
ref
# install.packages("devtools")
devtools::install_github("thomasp85/scico")
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradient2(low = "white",mid = "blue",high = "red" ,midpoint = ref)+
# scale_fill_gradientn(
#   colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
#   na.value = "transparent",
#   limit = c(min(data[["temp"]]) , ref, max(data[["temp"]]))
# ) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "AMAZONAS") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
p1
cpt(pal = "cb_div_RdBu_05",n = 3)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradient2(low = "#D10021",mid = "#FFFFFF",high = "#0575B6",midpoint = ref)+
# scale_fill_gradientn(
#   colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
#   na.value = "transparent",
#   limit = c(min(data[["temp"]]) , ref, max(data[["temp"]]))
# ) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "AMAZONAS") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
p1
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradient2(
low = "#D10021",
mid = "#FFFFFF",
high = "#0575B6",
midpoint = ref) +
# scale_fill_gradientn(
#   colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
#   na.value = "transparent",
#   limit = c(min(data[["temp"]]) , ref, max(data[["temp"]]))
# ) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "AMAZONAS") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
Noax <- list(
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(text = sprintf("%s", seq(1958,2020,10)))) %>%
layout(title = list(text = paste0('AMAZONAS',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(text = sprintf("%s", seq(1958,2020,10)))) %>%
layout(title = list(text = paste0('AMAZONAS',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
## Global options
knitr::opts_chunk$set(cache = TRUE)
ref <- temp_ref %>% filter(dep == "ANCASH") %>%
select(temp) %>% pull()
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradient2(
low = "#D10021",
mid = "#FFFFFF",
high = "#0575B6",
midpoint = ref) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "ANCASH") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
p1
ref <- temp_ref %>% filter(dep == "ANCASH") %>%
select(temp) %>% pull()
ref
data <- tidydata %>% filter(dep == "ANCASH") %>%
mutate(temp = temp)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradient2(
low = "#D10021",
mid = "#FFFFFF",
high = "#0575B6",
midpoint = ref) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "ANCASH") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
p1
ref
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(text = sprintf("%s", seq(1958,2020,10)))) %>%
layout(title = list(text = paste0('ANCASH',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
library(tidyverse)
library(cptcity)
library(plotly)
library(lubridate)
temp <- read_rds("data/temp")
tidydata <- temp %>%
pivot_longer(cols = `tmmx1958-01`:`tmmx2020-11`) %>%
mutate(
dep = case_when(
dep == "CALLAO" ~ "LIMA",
dep != "CALLAO" ~ dep
)
) %>%
mutate(fecha = substr(name, 5, 8)) %>%
mutate(
year = as.integer(substr(fecha, 1, 4)),
temp = as.double(value)
) %>%
select(dep, year, temp) %>%
mutate(dep = factor(dep)) %>%
group_by(dep, year) %>%
summarise(temp = mean(temp))
temp_ref <- tidydata %>%
filter(year %in% c(1980,1960)) %>%
select(temp) %>%
group_by(dep) %>%
summarise(temp = mean(temp))
names <- tidydata %>% select(dep) %>% unique()
ref <- temp_ref %>% filter(dep == "ANCASH") %>%
select(temp) %>% pull()
data <- tidydata %>% filter(dep == "ANCASH") %>%
mutate(temp = temp)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradient2(
low = "#D10021",
mid = "#FFFFFF",
high = "#0575B6",
midpoint = ref) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "ANCASH") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(text = sprintf("%s", seq(1958,2020,10)))) %>%
layout(title = list(text = paste0('ANCASH',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
ref <- temp_ref %>% filter(dep == "ANCASH") %>%
select(temp) %>% pull()
data <- tidydata %>% filter(dep == "ANCASH") %>%
mutate(temp = temp)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradient2(
low = "#D10021",
mid = "#FFFFFF",
high = "#0575B6",
midpoint = ref) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "ANCASH") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
Noax <- list(
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(text = sprintf("%s", seq(1958,2020,10)))) %>%
layout(title = list(text = paste0('ANCASH',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
library(tidyverse)
library(cptcity)
library(plotly)
library(lubridate)
temp <- read_rds("data/temp")
tidydata <- temp %>%
pivot_longer(cols = `tmmx1958-01`:`tmmx2020-11`) %>%
mutate(
dep = case_when(
dep == "CALLAO" ~ "LIMA",
dep != "CALLAO" ~ dep
)
) %>%
mutate(fecha = substr(name, 5, 8)) %>%
mutate(
year = as.integer(substr(fecha, 1, 4)),
temp = as.double(value)
) %>%
select(dep, year, temp) %>%
mutate(dep = factor(dep)) %>%
group_by(dep, year) %>%
summarise(temp = mean(temp))
temp_ref <- tidydata %>%
filter(year %in% c(1980,1960)) %>%
select(temp) %>%
group_by(dep) %>%
summarise(temp = mean(temp))
names <- tidydata %>% select(dep) %>% unique()
temp_ref
ref <- temp_ref %>% filter(dep == "AMAZONAS") %>%
select(temp) %>% pull()
data <- tidydata %>% filter(dep == "AMAZONAS") %>%
mutate(temp = temp)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradient2(
low = "#D10021",
mid = "#FFFFFF",
high = "#0575B6",
midpoint = ref) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "AMAZONAS") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
Noax <- list(
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(text = sprintf("%s", seq(1958,2020,10)))) %>%
layout(title = list(text = paste0('AMAZONAS',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
1958 - 2020
1958 + 2020/2
(1958 + 2020)/2
temp_ref
hist(temp_ref$temp)
ref <- temp_ref %>% filter(dep == "ANCASH") %>%
select(temp) %>% pull()
data <- tidydata %>% filter(dep == "ANCASH") %>%
mutate(temp = temp)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradient2(
low = "#0575B6",
mid = "#FFFFFF",
high ="#D10021",
midpoint = ref) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "ANCASH") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
p1
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradient2(
low = "#0575B6",
mid = "#FFFFFF",
high ="#D10021",
midpoint = ref) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "ANCASH") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank())
p1
ggsave(filename = "worflow.svg",width = 8,height = 4)
ggsave(filename = "worflow.svg",last_plot(),width = 8,height = 4)
ggsave("worflow.svg",last_plot(),width = 8,height = 4)
ggsave("worflow.svg",ggplot::last_plot(),width = 8,height = 4)
ggsave("worflow.svg",ggplot2::last_plot(),width = 8,height = 4)
