sources <- black$paint(inputPoints, 1)
sources <- sources$updateMask(sources)
Map$addLayer(sources)
# Compute the min cost path distance map, with a horizon of 1500 km.
# This can be reduced for high-latitude areas and/or to shorten processing time.
distance <- fsurface$cumulativeCost(sources, 400000)  # The function accepts meters rather than km.
Map$addLayer(distance)
sources
# Paint the input points, essentially converting them to a raster.
# Theoretically this will merge any points that fall within the same pixel (of the resulting 30-arc-second resolution).
black <- ee$Image(0)$byte()
sources <- black$paint(inputPoints, 1)
sources <- sources$updateMask(sources)
# Compute the min cost path distance map, with a horizon of 1500 km.
# This can be reduced for high-latitude areas and/or to shorten processing time.
distance <- fsurface$cumulativeCost(sources, 400000)  # The function accepts meters rather than km.
Map$addLayer(distance)
distance
distance <- distance$toInt() # Here we convert the output to integer to make the output .tif smaller (and the code more likely to run successfully).
distance
Map$addLayer(distance)
Map$addLayer(distance)
distance <- distance$clip(peru)
Map$addLayer(distance)
# Final Map
viz <- list(
min = 0,
max = 600,
palette = c("#dd554b","#e2b43f","#dbda92","#60b27f","#4866c9")
)
Map$addLayer(distance,viz,'accessibility') +
Map$addLayer(fsurface$clip(peru),viz,'friction')
setwd("~/Documentos/GitHub/ClimateStripes4PE/docs")
1958 - 2020
1958 - 2020
## Global options
knitr::opts_chunk$set(cache = TRUE)
library(tidyverse)
library(cptcity)
library(plotly)
temp <- read_rds("data/temp")
tidydata <- temp %>%
pivot_longer(cols = `tmmx1958-01`:`tmmx2020-11`) %>%
mutate(
dep = case_when(
dep == "CALLAO" ~ "LIMA",
dep != "CALLAO" ~ dep
)
) %>%
mutate(fecha = substr(name, 5, 8)) %>%
mutate(
year = as.integer(substr(fecha, 1, 4)),
temp = as.double(value)
) %>%
select(dep, year, temp) %>%
mutate(dep = factor(dep)) %>%
group_by(dep, year) %>%
summarise(temp = mean(temp))
temp_ref <- tidydata %>%
filter(year == 1980) %>%
select(temp)
names <- tidydata %>% select(dep) %>% unique()
ref <- temp_ref %>% filter(dep == "AMAZONAS") %>%
select(temp) %>% pull()
data <- tidydata %>% filter(dep == "AMAZONAS") %>%
mutate(temp = temp)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
theme_void() +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS")
Noax <- list(
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
ggplotly(p1) %>%
config(displayModeBar = F) %>%
layout(xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE)) %>%
layout(xaxis = Noax,
yaxis = Noax)
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE)) %>%
layout(xaxis = Noax,
yaxis = Noax)
2020-1958/2
2020-1958
1958+62
62/2
temp <- read_rds("data/temp")
tidydata <- temp %>%
pivot_longer(cols = `tmmx1958-01`:`tmmx2020-11`) %>%
mutate(
dep = case_when(
dep == "CALLAO" ~ "LIMA",
dep != "CALLAO" ~ dep
)
) %>%
mutate(fecha = substr(name, 5, 8)) %>%
mutate(
year = as.integer(substr(fecha, 1, 4)),
temp = as.double(value)
) %>%
select(dep, year, temp) %>%
mutate(dep = factor(dep)) %>%
group_by(dep, year) %>%
summarise(temp = mean(temp))
temp_ref <- tidydata %>%
filter(year == 1980) %>%
select(temp)
names <- tidydata %>% select(dep) %>% unique()
ref <- temp_ref %>% filter(dep == "AMAZONAS") %>%
select(temp) %>% pull()
data <- tidydata %>% filter(dep == "AMAZONAS") %>%
mutate(temp = temp)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
theme_void() +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS")
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE)) %>%
layout(yaxis = Noax)
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(autotick = F, tickmode = "array", tickvals = c(19859,10,2020)))
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(autotick = F, tickmode = "array", tickvals = c(19859,2020)))
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
theme_void() +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS") +
scale_x_date(date_labels = "%y", date_breaks = "10 year")
p1
library(lubridate)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
theme_void() +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS") +
scale_x_date(date_labels = "%y", date_breaks = "10 year")
p1
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
theme_void() +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS") +
scale_x_date(breaks = date_breaks("months"))=
Noax <- list(
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
theme_void() +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS") +
scale_x_continuous()
p1
seq(from = 1958, to = 10, by = 2020)
seq(from = 1958, to = 2020, by = 10)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
theme_void() +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10))
p1
data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
)
)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10))
ggplot(aes(x = year,y = 1, fill = temp)) +p1
p1
Noax <- list(
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(autotick = F, tickmode = "array", tickvals = c(19859,2020)))
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS") +
theme_minimal() +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10))
p1
Noax <- list(
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(autotick = F, tickmode = "array", tickvals = c(19859,2020)))
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS") +
theme_void() +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10))
p1
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS") +
theme_bw() +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10))
p1
Noax <- list(
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(autotick = F, tickmode = "array", tickvals = c(19859,2020)))
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank())
Noax <- list(
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(autotick = F, tickmode = "array", tickvals = c(19859,2020)))
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "AMAZONAS") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
Noax <- list(
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(autotick = F, tickmode = "array", tickvals = c(19859,2020)))
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "AMAZONAS") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
Noax <- list(
zeroline = FALSE,
showline = FALSE,
showticklabels = FALSE,
showgrid = FALSE
)
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(autotick = F, tickmode = "array", tickvals = c(19859,2020)))
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(autotick = F, tickmode = "array", tickvals = c(19859,2020))) %>%
layout(title = list(text = paste0('AMAZONAS',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
seq(1958,2020,10)
sprintf("%s", seq(1958,2020,10))
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(text = sprintf("%s", seq(1958,2020,10)))) %>%
layout(title = list(text = paste0('AMAZONAS',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim"
) +
labs(title = "ANCASH") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(text = sprintf("%s", seq(1958,2020,10)))) %>%
layout(title = list(text = paste0('ANCASH',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(text = sprintf("%s", seq(1958,2020,10)))) %>%
layout(title = list(text = paste0('ANCASH',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y = ""
) +
labs(title = "ANCASH") +
scale_x_continuous(breaks = seq(from = 1958, to = 2020, by = 10)) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank())
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(text = sprintf("%s", seq(1958,2020,10)))) %>%
layout(title = list(text = paste0('ANCASH',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
ref <- temp_ref %>% filter(dep == "APURIMAC") %>%
select(temp) %>% pull()
data <- tidydata %>% filter(dep == "APURIMAC") %>%
mutate(temp = temp)
p1 <- data %>%
ggplot(aes(x = year,y = 1, fill = temp)) +
geom_tile() +
scale_fill_gradientn(
colors = cpt(pal = "cb_div_RdBu_05",n = 5,rev = T),
na.value = "transparent"
) +
labs(
subtitle = "(1958-2020)",
caption = "Source: Elaborado por Pendulum-Lab con datos de TerraClim",
x = "",
y =
) +
labs(title = "APURIMAC")
ggplotly(p1,tooltip = c("year","temp")) %>%
config(displayModeBar = F) %>%
layout(yaxis = Noax) %>%
layout(xaxis = list(text = sprintf("%s", seq(1958,2020,10)))) %>%
layout(title = list(text = paste0('APURIMAC',
'<br>',
'<sup>',
'(1958-2020)','</sup>')))
